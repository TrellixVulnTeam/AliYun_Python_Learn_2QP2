# 小游戏分析_《唐僧大战白骨精》
# 我们应用条件判断循环语句等完成一个综合练习
# 《唐僧大战白骨精》
# 游戏预览：
# 先分析已经做好的游戏界面：可以看到界面首先选择身份，是唐僧还是白骨精
# 先选择 1，界面如下，显示了唐僧的一些信息
# 可以看到系统自动分配唐僧身份进行游戏，那么除了 1 和 2 之外，如果输入一个没有选项的 3 呢？
# 可以看到第一块实际上是游戏身份的选择，无论选择 1、2、3 或者是什么其他，系统都会分配给唐僧的身份去进行游戏
#
# 游戏分析：
# 该游戏分为两部分：
#
# 1. 身份选择
#   ①显示提示信息
#   欢迎光临 xxx 游戏！
#   请选择你的身份 ：
#       1. xxx
#       2. xxx
# 请选择 ：x
#   ②根据用户选择来分配身份（显示不同的提示信息）
#       1. ---
#       2. ---
#       3. ---
# 2. 游戏进行
#   ①显示玩家的基本信息(攻击力 生命值)
#   ②显示玩家可以进行的操作:
#       1、练级
#           -提升玩家的攻击力和生命值
#       2、打 BOSS
#           -玩家对 BOSS 进行攻击，玩家要攻击 BOSS，BOSS 对玩家进行反击
#           -计算 BOSS 是否被玩家消灭，玩家是否被 BOSS 消灭
# -游戏结束
# 3、逃跑
#   -退出游戏，显示提示信息，游戏结束！
# 思考怎么处理一个问题，选择1，显示练级信息，且下方一直出现选择操作的提示信息，即可以一直选择练级，攻击力和生命值一直可以提升。


# 显示欢迎信息
print("-----------------------欢迎光临《唐僧大战白骨精》--------------------")
# 显示身份选择信息
print('请选择你的身份：')
print('\t\t\t1.唐僧')
print('\t\t\t2.白骨精')
# 游戏的身份选择
chose = input("请选择[1-2]:")
# 打印一条分割线
print('-'*66)
# 根据用户的选择来显示不同的提示信息
if chose == '1':
    # 选择1
    print('你已经选择了1，你将以->唐僧<-的身份来进行游戏！')
elif chose == '2':
    # 选择2
    print('你竟然选择了白骨精，系统将自动分配身份，你将以->唐僧<-的身份来进行游戏！')
else:
    # 选择3
    print('你的选择有误，系统将自动分配身份，你将以->唐僧<-的身份来进行游戏！')
# 进入游戏
# 创建变量，来保存玩家的生命值和攻击力
# 生命值
play_life = 2
# 攻击力
play_attack = 2
# 创建变量，来保boss的生命值和攻击力
boss_life = 10
boss_attack = 10
# 打印一条分割线
print('-'*66)
# 显示玩家的信息（攻击力、生命值）
print(f'唐僧你的生命值是 {play_life}，你的攻击力是 {play_attack}')
# 由于游戏选项是需要反复执行的，所以必须将其编写到一个循环中
while True:
    # 打印一条分割线
    print('-' * 66)
    # 显示游戏选项，游戏正式开始
    print('请选择你要进行的操作：')
    print('\t\t\t\t1.练级')
    print('\t\t\t\t2.打boss')
    print('\t\t\t\t2.逃跑')
    game_chose = input('请选择要做的操作[1-3]：')
    # 处理用户的选择
    if game_chose == '1':
        # 增加玩家的生命力和攻击力
        play_life += 2
        play_attack += 2
        # 显示最新的信息
        # 打印一条分割线
        print('-' * 66)
        # 显示玩家的信息（攻击力、生命值）
        print(f'恭喜你升级了，唐僧你现在的生命值是 {play_life}，你的攻击力是 {play_attack}')
    elif game_chose == '2':
        # 玩家攻击boss
        # 减去boss的生命，减去的生命值应该等于玩家的攻击力
        boss_life -= play_attack
        # 打印一条分割线
        print('-'*66)
        print('->唐僧<- 攻击了 ->白骨精<-')
        # 检查boss是否死亡
        if boss_life <= 0:
            # boss死亡，player胜利
            print(f'->白骨精<- {play_attack} 点伤害，重伤不治死了，->唐僧<-赢得了胜利！')
            # 游戏结束
            break
        # boss要反击玩家
        # 减去玩家的生命值
        play_life -= boss_attack
        print('->白骨精<- 攻击了 ->唐僧<-')
        # 检查玩家是否死亡
        if play_life <= 0:
            # 玩家死亡
            print(f'你受到了 {boss_attack} 点伤害，重伤不治死了！GAME OVER！')
            # 游戏结束
            break
    elif game_chose == '3':
        # 打印一条分割线
        print('-' * 66)
        # 逃跑，退出游戏
        print('->唐僧<- 一扭头，撒腿就跑！GAME OVER!')
        break
    else:
        # 打印一条分割线
        print('-' * 66)
        print('你的输入有误，请重新输入！')
